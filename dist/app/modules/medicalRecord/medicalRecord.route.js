"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MedicalRecordRoutes = void 0;
const express_1 = __importDefault(require("express"));
const auth_1 = __importDefault(require("../../middlewares/auth"));
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const user_1 = require("../../../enums/user");
const medicalRecord_controller_1 = require("./medicalRecord.controller");
const medicalRecord_validation_1 = require("./medicalRecord.validation");
const fileUploadHandler_1 = __importDefault(require("../../middlewares/fileUploadHandler"));
const router = express_1.default.Router();
router.post('/', (0, auth_1.default)(user_1.USER_ROLES.SUPER_ADMIN, user_1.USER_ROLES.DOCTOR, user_1.USER_ROLES.ADMIN, user_1.USER_ROLES.USER), fileUploadHandler_1.default, (0, validateRequest_1.default)(medicalRecord_validation_1.MedicalRecordValidation.createMedicalRecordValidation), medicalRecord_controller_1.MedicalRecordController.createMedicalRecord);
router.get('/', (0, auth_1.default)(user_1.USER_ROLES.SUPER_ADMIN, user_1.USER_ROLES.DOCTOR, user_1.USER_ROLES.ADMIN, user_1.USER_ROLES.USER), medicalRecord_controller_1.MedicalRecordController.getAllMedicalRecords);
router.get('/:id', (0, auth_1.default)(user_1.USER_ROLES.SUPER_ADMIN, user_1.USER_ROLES.DOCTOR, user_1.USER_ROLES.ADMIN, user_1.USER_ROLES.USER), medicalRecord_controller_1.MedicalRecordController.getMedicalRecordById);
router.post('/:id', (0, auth_1.default)(user_1.USER_ROLES.SUPER_ADMIN, user_1.USER_ROLES.DOCTOR, user_1.USER_ROLES.ADMIN, user_1.USER_ROLES.USER), (0, validateRequest_1.default)(medicalRecord_validation_1.MedicalRecordValidation.updateMedicalRecordValidation), medicalRecord_controller_1.MedicalRecordController.updateMedicalRecord);
router.delete('/:id', (0, auth_1.default)(user_1.USER_ROLES.SUPER_ADMIN, user_1.USER_ROLES.DOCTOR, user_1.USER_ROLES.ADMIN, user_1.USER_ROLES.USER), medicalRecord_controller_1.MedicalRecordController.deleteMedicalRecord);
exports.MedicalRecordRoutes = router;
